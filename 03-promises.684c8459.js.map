{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,qBACpCC,EAAiBF,SAASC,cAAc,oBACxCE,EAAcH,SAASC,cAAc,sBAK3C,SAASG,EAAcC,EAAUC,GAW3B,OAVY,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAdMN,SAASC,cAAc,SAE/BY,iBAAiB,UAgBtB,SAAoBC,GAClBA,EAAEC,iBAMF,IAJA,IAAIC,EAAaC,OAAOlB,EAAWmB,OAC/BC,EAASF,OAAOd,EAAYe,OAC5BE,EAAYH,OAAOf,EAAegB,OAE7BG,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCjB,EAAciB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,QAAQC,IAAInB,GACZoB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEvEwB,OAAM,SAAAP,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBoB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEvEU,GAAcI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelay = document.querySelector('input[name=delay]');\nconst inputStepDelay = document.querySelector('input[name=step]');\nconst inputAmount = document.querySelector('input[name=amount]');\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', submitForm);\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  }); return promise;\n}\n\nfunction submitForm(e) {\n  e.preventDefault();\n\n  let startDelay = Number(firstDelay.value);\n  let amount = Number(inputAmount.value);\n  let stepDelay = Number(inputStepDelay.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, startDelay)\n      .then(({ position, delay }) => {\n        console.log(delay);\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    startDelay += stepDelay;\n  }\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$inputStepDelay","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","startDelay","Number","value","amount","stepDelay","i","then","param","console","log","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.684c8459.js.map"}